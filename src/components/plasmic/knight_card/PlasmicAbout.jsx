// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: fBQJDH7PU5FGNVtvQedmDg
// Component: 0BMZIJF84xgEq
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: nlfm8NUj2v054/component
import Footer from "../../Footer"; // plasmic-import: -Lfs3sivO2_2k/component
import { useScreenVariants as useScreenVariantsteWoHrXp1ORco } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: teWOHrXP1oRco/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_knight_card.module.css"; // plasmic-import: fBQJDH7PU5FGNVtvQedmDg/projectcss
import sty from "./PlasmicAbout.module.css"; // plasmic-import: 0BMZIJF84xgEq/css

export const PlasmicAbout__VariantProps = new Array();

export const PlasmicAbout__ArgProps = new Array();

function PlasmicAbout__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsteWoHrXp1ORco()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          {true ? (
            <div
              data-plasmic-name={"freeBox"}
              data-plasmic-override={overrides.freeBox}
              className={classNames(projectcss.all, sty.freeBox)}
            >
              <p.Stack
                as={"section"}
                data-plasmic-name={"section"}
                data-plasmic-override={overrides.section}
                hasGap={true}
                className={classNames(projectcss.all, sty.section)}
              >
                <div
                  data-plasmic-name={"text"}
                  data-plasmic-override={overrides.text}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. "
                    : "Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. Explain this shit. "}
                </div>
              </p.Stack>
            </div>
          ) : null}

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "header", "freeBox", "section", "text", "footer"],
  header: ["header"],
  freeBox: ["freeBox", "section", "text"],
  section: ["section", "text"],
  text: ["text"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicAbout__ArgProps,
          internalVariantPropNames: PlasmicAbout__VariantProps
        }),

      [props, nodeName]
    );

    return PlasmicAbout__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAbout";
  } else {
    func.displayName = `PlasmicAbout.${nodeName}`;
  }
  return func;
}

export const PlasmicAbout = Object.assign(
  // Top-level PlasmicAbout renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    freeBox: makeNodeComponent("freeBox"),
    section: makeNodeComponent("section"),
    text: makeNodeComponent("text"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicAbout
    internalVariantProps: PlasmicAbout__VariantProps,
    internalArgProps: PlasmicAbout__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicAbout;
/* prettier-ignore-end */
